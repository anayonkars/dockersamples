sudo vi /etc/update-manager/release-upgrades
sudo vi /etc/apt/sources.list
sudo apt update && sudo apt dist-upgrade -y
sudo do-release-upgrade
sudo apt install neofetch -y
sudo neofetch
sudo apt update && sudo apt dist-upgrade -y
sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons mvn git scala gradle openjdk-8-jdk openjdk-8-jre -y
sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons maven git scala gradle openjdk-8-jdk openjdk-8-jre -y
sudo apt install gnome-tweak-tool -y
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable"
sudo apt update
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
bionic \
stable"
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io
apt-cache madison docker-ce
sudo apt install docker-ce=5:19.03.8~3-0~ubuntu-bionic docker-ce-clie=5:19.03.8~3-0~ubuntu-bionic containerd.io -y
sudo apt install docker-ce=5:19.03.8~3-0~ubuntu-bionic docker-ce-cli=5:19.03.8~3-0~ubuntu-bionic containerd.io -y
sudo docker run hello-world
docker run -it ubuntu bash
sudo docker run -it ubuntu bash
neofetch
java -version
sudo update-alternatives --config java
javac -version
java -version
sudo apt update && sudo apt dist-upgrade
sudo apt update && sudo apt dist-upgrade -y
neofetch
sudo apt update && sudo apt dist-upgrade -y
sudo docker run hello-world
sudo docker run -it ubuntu bash
sudo apt install docker-compose -y
sudo groupadd docker
sudo usermod -aG docker $USER
sudo systemctl enable docker
docker run hello-world
sudo docker run hello-world
sudo docker images
sudo docker images | cut -d '\t' -f1
sudo docker images | cut -d '\\t' -f1
sudo docker images | cut -d ' ' -f1
sudo docker images | cut -d ' ' -f2
sudo docker images -a
sudo docker images -a | awk '{pring $3}'
sudo docker images -a | awk '{print $3}'
sudo docker images -a | awk '{print $3}' | grep -v IMAGE
sudo docker images -a | awk '{print $3}' | grep -v IMAGE | xargs sudo docker rmi
sudo docker images purge
sudo docker images
sudo docker system prune -a
sudo docker iamges
sudo docker images
sudo docker run hello-world
sudo docker run -it ubuntu bash
neofetch
sudo docker system prune -a
sudo docker images
docker container ls
docker images
docker container ls -la
docker container rm eager_chatterjee
docker container stop eager_chatterjee
docker container ls -a
docker container rm eager_chatterjee
docker container ls -la
docker run hello-world
docker run -it ubuntu bash
neofetch
cd co
mkdir code
cd code/
mkdir docker
cd docker/
cat > hello.py
cat hello.py
mv hello.py hello-world.py
sudo apt install python
docker run -v $(pwd):/src python:3 python /src/hello-world.py
docker container ls -a
docker container rm d7a3aa5a20dd
docker container ls -a
docker run -v $(pwd):/src --rm python:3 python /src/hello-world.py
docker container ls -a
docker ps -a -q
docker container rm $(docker ps -a -q)
docker container ls -a
docker images
docker images -a -q
docker images rm $(docker images -a -q)
docker images --help
vi hello-world.py
cat hello-world.py
docker run -v $(pwd):/src python:3 python /src/hello-world.py
vi hello-world.py
docker run --rm -v $(pwd):/src python:3 python /src/hello-world.py
docker container ls
docker container ls -a
docker run hello-world
docker container ls
docker container ls -a
docker container rm $(docker container ps -a q)
docker container rm $(docker ps -a q)
docker container rm $(docker ps -a -q)
docker run -it --rm python:3
docker container ls -a
docker run -it --rm python:3 /bin/bash
docker container ls -la
docker run -it --rm node:latest /bin/bash
docker run --help
docker run --rm -d --name my_mysql -e MYSQL_ROOT_PASSWORD=some-pwd mysql:latest
docker container ls
docker exec -it my_mysql mysql -h localhost -u root -p
docker container ls
docker container stop my_mysql
docker container ls
docker run --rm --name my_mysql -e MYSQL_ROOT_PASSWORD=some-pwd mysql:latest
vi index.html
cat index.html
docker exec -it my_mysql mysql -h localhost -u root -p
docker ps
docker container stop my_mysql
docker ps
docker run --rm -d -v $(pwd):/usr/share/nginx/html -p 80:80 --name my_nginx nginx:latest
docker ps
docker exec -it my_nginx /bin/bash
docker ps
docker stop my_nginx
docker ps
docker run --rm -d -v $(pwd):/usr/share/nginx/html -p 1234:80 --name my_nginx nginx:latest
docker ps
docker container stop my_nginx
cd code/docker/
ls
vi hello-world.py
docker run --rm -v $(pwd):/src python:3 python3 /src/hello-world.py
vi Dockerfile
cat Dockerfile
docker build py_numpy .
docker build py_numpy -t .
docker build -t py_numpy .
mkdir numpy ubuntu
mv Dockerfile numpy/
cd ubuntu/
vi Dockerfile
cat Dockerfile
docker build -t ubuntu_fun .
vi Dockerfile
docker build -t ubuntu_fun .
vi Dockerfile
docker build -t ubuntu_fun .
ls
docker image
docker images
cd ..
docker run --rm -v $(pwd):/src python:3 python3 /src/hello-world.py
docker run --rm -v $(pwd):/src py_numpy python3 /src/hello-world.py
docker run --rm ubuntu_fun /bin/bash
docker run --rm -it ubuntu_fun /bin/bash
docker run --rm -it ubuntu_fun
docker ps
docker run -it ubuntu_fun
docker run -it ubuntu_fun /bin/bash
docker network create net_1
docker network ls
cat > run.py
docker run --rm -d --net net_1 --name my_py -v $(pwd):/src python:3 python3 /src/run.py
docker ps
docker run --rm -it --net net_1 node:latest /bin/bash
docker ps
docker container stop my_py
docker network rm net_1
docker network ls
docker run -d --rm -e MYSQL_ROOT_PASSWORD=abc123 --name my_mysql --net net_2 mysql:latest
docker network create net_2
docker run -d --rm -e MYSQL_ROOT_PASSWORD=abc123 --name my_mysql --net net_2 mysql:latest
docker run -it --rm -e MYSQL_ROOT_PASSWORD=abc123 --name my_mysql2 --net net_2 mysql:latest /bin/bash
docker ps
docker container stop my_mysql
docker network ls
docker network rm net_2
vi docker-compose.yml
docker-compose up
vi docker-compose.yml
gedit docker-compose.yml
cat docker-compose.yml
docker-compose up
vi docker-compose.yml
docker-compose up
docker-compose up -d
docker container ls
vi docker-compose.yml
docker-compose up
docker container
docker container ls
docker container ls -la
docker container rm my_mysql
docker container ls -la
docker container rm my_ubuntu
docker container ls -la
docker container rm my_py
docker container ls -la
docker containers
docker ps
docker container ls -a
docker container rm $(docker ps -a -q)
docker container ls -a
docker-compose up -d
docker-compose ps
docker container ls -a
docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
mkdir docker-scaling
cd docker-scaling/
ls
gedit docker-compose.yml
ls
ls -la
mkdir py nginx
cd py/
ls
gedit app.py
ls
cat app.py
cd ../nginx/
ls
gedit nginx.conf
cat nginx.conf
cd ..
gedit docker-compose.yml
cat docker-compose.yml
ls
gedit Dockerfile
cat Dockerfile
docker-compose up --scale flask=12
vi Dockerfile
docker container ls -a
docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
docker container ls -a
docker-compose up --scale flask=12
cat Dockerfile
docker system prune -a
docker-compose up --scale flask=12
vi py/app.py
docker system prune -a
docker-compose up --scale flask=12
cd ..
history
cd docker/
history > commands
awk '{$1=""; print $0}' commands
awk '{$1=$1}1' commands
